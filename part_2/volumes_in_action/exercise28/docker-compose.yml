version: '3.8'

services:
  # Frontend
  example-frontend:
    image: example-front 
    ports:
      - 5000:5000
    container_name: frontend-example

  # Backend
  example-backend:
    image: example-back 
    environment:
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_USER=nikola
      - POSTGRES_PASSWORD=example 
      - POSTGRES_DATABASE=postgres
    ports: 
      - 8080:8080
    container_name: backend-example

  # Cache 
  cache:
    image: redis
    restart: unless-stopped
    volumes:
      - cache:/data 
    command: redis-server --save 60 1 --loglevel warning
  
  # Postgres database
  db:
    image: postgres:13.2-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: nikola
      POSTGRES_PASSWORD: example 
    volumes:
      - type: bind
        source: ./data 
        target: /var/lib/postgresql/data

  # Nginx proxy
  nginx:
    image: nginx:1.25.0-alpine
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
volumes:
  cache:
    driver: local
